{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'admin',\n  data() {\n    return {\n      changepassword: {},\n      dialogpw: false,\n      //密码框\n      loading: false,\n      dialogFormVisibleadd: false,\n      //添加弹框\n      form: {},\n      user: {\n        username: '',\n        password: '',\n        password1: ''\n      },\n      pagelistquery: {\n        total: 0,\n        page: 1,\n        pagesize: 10,\n        user: '',\n        state: ''\n      },\n      tableData: [] //列表信息\n    };\n  },\n  methods: {\n    registered() {\n      const userReg = /^[1-9a-zA-Z]{1}[0-9a-zA-Z]{5,9}$/; //6-10位字母数字\n      const pwdReg = /^[a-zA-Z]\\w{5,17}$/; //6-18位字母数字下划线 字母开头\n      if (!userReg.test(this.user.username)) {\n        this.$message.error('账号为6-10位字母数字字母');\n        return;\n      }\n      if (!pwdReg.test(this.user.password)) {\n        this.$message.error('密码为6-18位字母数字或下划线 字母开头');\n        return;\n      }\n      if (this.user.password !== this.user.password1) {\n        this.$message.error('两次密码不相等');\n        return;\n      }\n      this.$axios({\n        url: '/admin/registered',\n        method: 'POST',\n        data: this.qs.stringify(this.user)\n      }).then(res => {\n        let data = res.data;\n        if (data.state.type !== 'SUCCESS') {\n          if (data.state.type == 'ERROR_PARAMS_EXIST') {\n            this.$message.error('账户名重复');\n          } else {\n            this.$message.error('账号添加失败失败');\n          }\n          return;\n        }\n        this.$message.success('账号添加成功');\n        this.dialogFormVisibleadd = false;\n        this.getadminlist();\n      }).catch(e => {\n        this.$message.error(e);\n      });\n    },\n    async changestate(row) {\n      let res = await this.$axios.post('/admin/changeadminstate', this.qs.stringify(row));\n      if (res.data.state.type === 'SUCCESS') {\n        this.$message.success('更改授权成功');\n      }\n    },\n    changepw(row) {\n      this.dialogpw = true;\n      this.changepassword = row;\n    },\n    //修改密码\n    async change() {\n      this.changepassword.type = 'adminadmin';\n      let res = await this.$axios.post('/admin/changepassword', this.qs.stringify(this.changepassword));\n      if (res.data.state.type === 'SUCCESS') {\n        this.$message.success('修改成功');\n        this.dialogpw = false;\n      }\n    },\n    //删除用户\n\n    async deleteuser(row) {\n      let data = {\n        user_id: row.user_id,\n        usertype: 'admin'\n      };\n      this.$confirm('确认删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$axios.post('/admin/deleteuser', this.qs.stringify(data)).then(res => {\n          if (res.data.state.type === 'SUCCESS') {\n            this.$message.success('删除成功');\n            this.getadminlist();\n          }\n        });\n      });\n    },\n    handleSizeChange(val) {\n      this.pagelistquery.pagesize = val;\n      this.getadminlist();\n    },\n    handleCurrentChange(val) {\n      this.pagelistquery.page = val;\n      this.getadminlist();\n    },\n    async getadminlist() {\n      this.loading = true;\n      let res = await this.$axios.post('/admin/getadminlist', this.qs.stringify(this.pagelistquery));\n      if (res.data.state.type === 'SUCCESS') {\n        this.tableData = res.data.data;\n        this.pagelistquery.total = res.data.count;\n      }\n      this.loading = false;\n    }\n  },\n  created() {\n    this.getadminlist();\n  }\n};","map":{"version":3,"names":["name","data","changepassword","dialogpw","loading","dialogFormVisibleadd","form","user","username","password","password1","pagelistquery","total","page","pagesize","state","tableData","methods","registered","userReg","pwdReg","test","$message","error","$axios","url","method","qs","stringify","then","res","type","success","getadminlist","catch","e","changestate","row","post","changepw","change","deleteuser","user_id","usertype","$confirm","confirmButtonText","cancelButtonText","handleSizeChange","val","handleCurrentChange","count","created"],"sources":["src/views/usermanage/useradmin.vue"],"sourcesContent":["<template>\n  <div class=\"useruser\">\n    <el-main>\n      <div class=\"top\">\n        <el-breadcrumb separator=\"/\">\n          <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n          <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n          <el-breadcrumb-item>管理员用户管理</el-breadcrumb-item>\n        </el-breadcrumb>\n      </div>\n\n      <div class=\"main\">\n        <div class=\"search\">\n          <el-form\n            :inline=\"true\"\n            :model=\"pagelistquery\"\n            class=\"demo-form-inline\"\n          >\n            <el-form-item>\n              <el-input\n                v-model=\"pagelistquery.user\"\n                placeholder=\"账号模糊查找\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-select v-model=\"pagelistquery.state\" placeholder=\"账号状态\">\n                <el-option label=\"启用\" value=\"1\"></el-option>\n                <el-option label=\"停用\" value=\"0\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"getadminlist\">查询</el-button>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"dialogFormVisibleadd = true\"\n                >添加账号</el-button\n              >\n            </el-form-item>\n          </el-form>\n        </div>\n        <el-dialog\n          title=\"添加新的账号\"\n          :visible.sync=\"dialogFormVisibleadd\"\n          width=\"500px\"\n        >\n          <el-form :model=\"form\">\n            <el-form-item label=\"账号\" label-width=\"100px\">\n              <el-input v-model=\"user.username\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码\" label-width=\"100px\">\n              <el-input\n                type=\"password\"\n                v-model=\"user.password\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item label=\"确认密码\" label-width=\"100px\">\n              <el-input\n                type=\"password\"\n                v-model=\"user.password1\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisibleadd = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"registered\">确 定</el-button>\n          </div>\n        </el-dialog>\n\n        <el-dialog title=\"输入新的密码\" :visible.sync=\"dialogpw\" width=\"500px\">\n          <el-form :model=\"changepassword\">\n            <el-form-item label=\"账号\" label-width=\"100px\">{{\n              changepassword.username\n            }}</el-form-item>\n            <el-form-item label=\"新密码\" label-width=\"100px\">\n              <el-input\n                v-model=\"changepassword.newpassword\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogpw = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"change\">确 定</el-button>\n          </div>\n        </el-dialog>\n\n        <el-table\n          :data=\"tableData\"\n          border\n          style=\"width: 100%;min-height:500px\"\n          v-loading=\"loading\"\n          element-loading-text=\"拼命加载中\"\n          element-loading-spinner=\"el-icon-loading\"\n        >\n          <el-table-column prop=\"username\" label=\"账号\"></el-table-column>\n          <el-table-column prop=\"nickname\" label=\"昵称\"></el-table-column>\n          <el-table-column prop=\"nickname\" label=\"审核中心\">\n            <template slot-scope=\"scope\">\n              <el-switch\n                @click.native.prevent=\"changestate(scope.row)\"\n                v-model=\"scope.row.issh\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n\n          <el-table-column prop=\"nickname\" label=\"用户管理\">\n            <template slot-scope=\"scope\">\n              <el-switch\n                @click.native.prevent=\"changestate(scope.row)\"\n                v-model=\"scope.row.isyh\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n\n          <el-table-column prop=\"nickname\" label=\"网站管理中心\">\n            <template slot-scope=\"scope\">\n              <el-switch\n                @click.native.prevent=\"changestate(scope.row)\"\n                v-model=\"scope.row.isgl\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n\n          <el-table-column prop=\"nickname\" label=\"反馈中心\">\n            <template slot-scope=\"scope\">\n              <el-switch\n                @click.native.prevent=\"changestate(scope.row)\"\n                v-model=\"scope.row.isfk\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n\n          <el-table-column prop=\"nickname\" label=\"账号状态\">\n            <template slot-scope=\"scope\">\n              <el-switch\n                @click.native.prevent=\"changestate(scope.row)\"\n                v-model=\"scope.row.user_state\"\n                active-color=\"#13ce66\"\n                inactive-color=\"#ff4949\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            prop=\"nickname\"\n            fixed=\"right\"\n            label=\"操作\"\n            width=\"170\"\n          >\n            <template slot-scope=\"scope\">\n              <el-button\n                type=\"text\"\n                size=\"small\"\n                :disabled=\"scope.row.username == 'admin'\"\n                @click=\"deleteuser(scope.row)\"\n                >删除</el-button\n              >\n              <el-button\n                type=\"text\"\n                :disabled=\"scope.row.username == 'admin'\"\n                size=\"small\"\n                @click=\"changepw(scope.row)\"\n                >修改密码</el-button\n              >\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <!--分页-->\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"pagelistquery.pagesize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"pagelistquery.total\"\n          style=\"margin-top: 20px;\"\n        ></el-pagination>\n      </div>\n    </el-main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'admin',\n  data() {\n    return {\n      changepassword: {},\n      dialogpw: false, //密码框\n      loading: false,\n      dialogFormVisibleadd: false, //添加弹框\n      form: {},\n      user: {\n        username: '',\n        password: '',\n        password1: ''\n      },\n      pagelistquery: {\n        total: 0,\n        page: 1,\n        pagesize: 10,\n        user: '',\n        state: ''\n      },\n      tableData: [] //列表信息\n    }\n  },\n  methods: {\n    registered() {\n      const userReg = /^[1-9a-zA-Z]{1}[0-9a-zA-Z]{5,9}$/ //6-10位字母数字\n      const pwdReg = /^[a-zA-Z]\\w{5,17}$/ //6-18位字母数字下划线 字母开头\n      if (!userReg.test(this.user.username)) {\n        this.$message.error('账号为6-10位字母数字字母')\n        return\n      }\n      if (!pwdReg.test(this.user.password)) {\n        this.$message.error('密码为6-18位字母数字或下划线 字母开头')\n        return\n      }\n      if (this.user.password !== this.user.password1) {\n        this.$message.error('两次密码不相等')\n        return\n      }\n      this.$axios({\n        url: '/admin/registered',\n        method: 'POST',\n        data: this.qs.stringify(this.user)\n      })\n        .then(res => {\n          let data = res.data\n          if (data.state.type !== 'SUCCESS') {\n            if (data.state.type == 'ERROR_PARAMS_EXIST') {\n              this.$message.error('账户名重复')\n            } else {\n              this.$message.error('账号添加失败失败')\n            }\n            return\n          }\n          this.$message.success('账号添加成功')\n          this.dialogFormVisibleadd = false\n          this.getadminlist()\n        })\n        .catch(e => {\n          this.$message.error(e)\n        })\n    },\n    async changestate(row) {\n      let res = await this.$axios.post(\n        '/admin/changeadminstate',\n        this.qs.stringify(row)\n      )\n      if (res.data.state.type === 'SUCCESS') {\n        this.$message.success('更改授权成功')\n      }\n    },\n    changepw(row) {\n      this.dialogpw = true\n      this.changepassword = row\n    },\n    //修改密码\n    async change() {\n      this.changepassword.type = 'adminadmin'\n      let res = await this.$axios.post(\n        '/admin/changepassword',\n        this.qs.stringify(this.changepassword)\n      )\n      if (res.data.state.type === 'SUCCESS') {\n        this.$message.success('修改成功')\n        this.dialogpw = false\n      }\n    },\n    //删除用户\n\n    async deleteuser(row) {\n      let data = {\n        user_id: row.user_id,\n        usertype: 'admin'\n      }\n        this.$confirm('确认删除吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$axios.post(\n            '/admin/deleteuser',\n            this.qs.stringify(data)\n          ).then(res => {\n            if (res.data.state.type === 'SUCCESS') {\n              this.$message.success('删除成功')\n              this.getadminlist()\n            }\n          })\n        })\n    },\n    handleSizeChange(val) {\n      this.pagelistquery.pagesize = val\n      this.getadminlist()\n    },\n    handleCurrentChange(val) {\n      this.pagelistquery.page = val\n      this.getadminlist()\n    },\n    async getadminlist() {\n      this.loading = true\n      let res = await this.$axios.post(\n        '/admin/getadminlist',\n        this.qs.stringify(this.pagelistquery)\n      )\n      if (res.data.state.type === 'SUCCESS') {\n        this.tableData = res.data.data\n        this.pagelistquery.total = res.data.count\n      }\n      this.loading = false\n    }\n  },\n  created() {\n    this.getadminlist()\n  }\n}\n</script>\n<style scoped>\n.top {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 35px);\n  padding: 12px 16px;\n  background-color: #fff;\n}\n.useruser {\n  position: relative;\n  width: 100%;\n}\n.main {\n  margin-top: 40px;\n  padding: 20px;\n  background-color: #fff;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}