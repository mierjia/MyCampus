{"remainingRequest":"E:\\download\\InterConnect\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\download\\InterConnect\\web\\src\\views\\user\\notice.vue?vue&type=style&index=0&id=9b094034&scoped=true&lang=css&","dependencies":[{"path":"E:\\download\\InterConnect\\web\\src\\views\\user\\notice.vue","mtime":1717936862000},{"path":"E:\\download\\InterConnect\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\download\\InterConnect\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\download\\InterConnect\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\download\\InterConnect\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\download\\InterConnect\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kZWwgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogNDBweDsKICB0b3A6IDRweDsKfQouc3RhdGUwIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["notice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"notice.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"notice\">\n    <h3>未读消息：{{unread}}/{{num}}</h3>\n    <div style=\"position:relative ;height:30px\">\n      <div class=\"del\">\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-view\"\n          v-if=\"unread!==0\"\n          @click=\"changenotice('changeall','a') \"\n        >全部已读</el-button>\n        <el-button\n          type=\"text\"\n          v-if=\"num!==0\"\n          icon=\"el-icon-delete\"\n          @click=\"changenotice('deleteall','a')\"\n        >全部删除</el-button>\n      </div>\n    </div>\n\n    <el-divider></el-divider>\n    <div v-if=\"num==0\">\n      <img src=\"../../assets/images/noinfo.png\" width=\"100%\" alt />\n      <div style=\"width:100%;text-align:center\">暂无消息通知</div>\n    </div>\n    <div style=\"position:relative\" v-for=\"(notice,id) in tableData\" :key=\"id\">\n      <div\n        style=\"width:10px;height:10px;border-radius:50%;display:inline-block\"\n        :class=\"`state${notice.state}`\"\n      ></div>\n      <span style=\"margin-left:20px\">{{notice.createtime| dataFormat}}</span>\n      <span style=\"margin-left:20px\">{{notice.nickname}}</span>\n      <span style=\"margin-left:20px\">{{notice.action}}</span>\n      <span style=\"margin-left:20px\">\n        来自 {{notice.router| platename}}\n        <a\n          style=\"font-size:20px\"\n          @click=\"changenotice('change',notice.notice_id)\"\n          :href=\"`${url}${notice.router}/${notice.content_id}`\"\n          target=\"_blank\"\n        >{{notice.content_name}}</a>\n      </span>\n      <i class=\"el-icon-delete del\" @click=\"changenotice('delete',notice.notice_id)\"></i>\n      <el-divider></el-divider>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"notice\",\n  data() {\n    return {\n      tableData: \"\",\n      num: 0\n    };\n  },\n  filters: {\n    platename(router) {\n      if (router == \"helpcontent\") {\n        return \"问答\";\n      }\n      \n    }\n  },\n  computed: {\n    ...mapState({\n      unread: state => state.user.unread,\n      url: state => state.url\n    })\n  },\n  methods: {\n    ...mapActions(\"user\", [\"setunread\"]),\n    async getnoticelist() {\n      let res = await this.$axios.post(\n        \"/web/getnotice\",\n        this.qs.stringify({ num: \"\" })\n      );\n      if (res.data.state.type === \"SUCCESS\") {\n        this.setunread(res.data.data.count);\n        this.tableData = res.data.data.list;\n        this.num = res.data.data.num;\n        console.log(\"消息列表\");\n        console.log((this.tableData = res.data.data.list));\n        // this.pagelistquery.total = res.data.count;\n      }\n    },\n    async changenotice(change, notice_id) {\n      let res = await this.$axios.post(\n        \"/web/changenotice\",\n        this.qs.stringify({ change: change, notice_id: notice_id })\n      );\n      if (res.data.state.type === \"SUCCESS\") {\n        this.getnoticelist();\n      }\n    }\n  },\n  created() {\n    this.getnoticelist();\n  }\n};\n</script>\n<style  scoped>\n.del {\n  position: absolute;\n  right: 40px;\n  top: 4px;\n}\n.state0 {\n  background-color: red;\n}\n</style>\n"]}]}