{"remainingRequest":"D:\\Desktop\\InterConnect\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\InterConnect\\web\\src\\components\\activityoverview.vue?vue&type=style&index=0&id=4a7f9cd0&scoped=true&lang=css&","dependencies":[{"path":"D:\\Desktop\\InterConnect\\web\\src\\components\\activityoverview.vue","mtime":1718024627300},{"path":"D:\\Desktop\\InterConnect\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\InterConnect\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Desktop\\InterConnect\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Desktop\\InterConnect\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\InterConnect\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFjdGl2aXR5IHsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7IC8qIOWinuWKoOWklui+uei3nSAqLwp9Ci5jbGlja2FibGUtYWN0aXZpdHkgewogIGN1cnNvcjogcG9pbnRlcjsKICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3M7Cn0KLmNsaWNrYWJsZS1hY3Rpdml0eTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDsgLyog6IOM5pmv6aKc6Imy5Y+Y5YyWICovCiAgY29sb3I6ICMwMDdiZmY7IC8qIOWtl+S9k+minOiJsuWPmOWMliAqLwp9Cg=="},{"version":3,"sources":["activityoverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"activityoverview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"activity\">\n    <div class=\"row-fluid top-cats\">\n      <section class=\"widget\">\n        <div class=\"page-header\" style=\"position:relative;cursor:pointer\">\n          <div>\n            <h3>活动中心</h3>\n          </div>\n        </div>\n        <ul class=\"articles\">\n          <li\n            class=\"article-entry standard clickable-activity\"\n            v-for=\"(activity, id) in tableData\"\n            :key=\"id\"\n            @click=\"selectActivity(activity.activity_id)\"\n          >\n            <h4>{{ activity.activity_title }}</h4>\n            <span class=\"article-meta\">\n              <a class=\"iconfont\">&#xe619;</a>\n              {{ activity.createtime | dataFormat }}\n              <a class=\"iconfont\" style=\"margin-left:50px\">&#xe609;</a>\n              {{ activity.activity_locale }}\n            </span>\n            <span class=\"like-count\">\n              <a class=\"iconfont\" style=\"color:red\">&#xe647;</a>\n              {{ activity.activity_read_num }}\n            </span>\n          </li>\n        </ul>\n      </section>\n      <el-pagination\n        @current-change=\"handleCurrentChange\"\n        layout=\"prev, pager, next\"\n        :total=\"pagelistquery.total\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      smallttle: '',\n      lables: [],\n      pagelistquery: {\n        lable: '',\n        total: 0,\n        pagesize: 10,\n        page: 1\n      },\n      tableData: {}\n    }\n  },\n  methods: {\n    changelable(lable) {\n      this.pagelistquery.lable = lable\n      this.smallttle = this.pagelistquery.lable\n      this.getactivitylist()\n    },\n    handleCurrentChange(val) {\n      this.pagelistquery.page = val\n      this.gethelplist()\n      console.log(`当前页: ${val}`)\n    },\n    async getactivitylist() {\n      let res = await this.$axios.post(\n        '/web/webgetwebactivitylist',\n        this.qs.stringify(this.pagelistquery)\n      )\n      if (res.data.state.type === 'SUCCESS') {\n        this.tableData = res.data.data\n        this.pagelistquery.total = res.data.count\n      }\n    },\n    selectActivity(activityId) {\n      this.$emit('activity-selected', activityId)\n    },\n    async lablelist() {\n      let res = await this.$axios.post(\n        '/admin/lablelist',\n        this.qs.stringify({ lable_name: '活动分类' })\n      )\n      if (res.data.state.type === 'SUCCESS') {\n        // this.lable = res.data.data\n        this.lables = JSON.parse(res.data.data[0].lable)\n        console.log('分类列表')\n        console.log(this.lables)\n      }\n    }\n  },\n  created() {\n    this.getactivitylist()\n    this.lablelist()\n  }\n}\n</script>\n\n<style scoped>\n.activity {\n  margin-right: 20px; /* 增加外边距 */\n}\n.clickable-activity {\n  cursor: pointer;\n  transition: background-color 0.3s, color 0.3s;\n}\n.clickable-activity:hover {\n  background-color: #f0f0f0; /* 背景颜色变化 */\n  color: #007bff; /* 字体颜色变化 */\n}\n</style>\n"]}]}